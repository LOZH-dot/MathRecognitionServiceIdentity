namespace MathRecognitionServiceIdentity.Parsers
{
    enum ParseClasses
    {
        minus,                  // -
        exclamationMark,        // !
        openingBracket,         // (
        closingBracket,         // )
        comma,                  // ,
        openingSquareBracket,   // [
        closingSquareBracket,   // ]
        openingCurlyBrace,      // {
        closingCurlyBrace,      // }
        plus,                   // +
        equally,                // =
        zero,                   // 0
        one,                    // 1
        two,                    // 2
        three,                  // 3
        four,                   // 4
        five,                   // 5
        six,                    // 6
        seven,                  // 7
        eight,                  // 8
        nine,                   // 9
        A,                      // A
        alpha,                  // alpha
        ascii_124,              // ascii_124
        b,                      // b
        beta,                   // beta
        C,                      // C
        cos,                    // cos
        d,                      // d
        delta,                  // delta
        div,                    // div
        e,                      // e
        exists,                 // exists
        f,                      // f
        forall,                 // forall
        forwardSlash,           // forward_slash
        G,                      // G
        gamma,                  // gamma
        geq,                    // geq
        gt,                     // gt
        H,                      // H
        i,                      // i
        belongs,                // in
        infinity,               // infty
        integral,               // integral
        j,                      // j
        k,                      // k
        l,                      // l
        lambda,                 // lambda
        ldots,                  // ldots
        leq,                    // leq
        lim,                    // lim
        log,                    // log
        lt,                     // lt
        M,                      // M
        mu,                     // mu
        N,                      // N
        neq,                    // neq
        o,                      // o
        p,                      // p
        phi,                    // phi
        pi,                     // pi
        pm,                     // pm
        prime,                  // prime
        q,                      // q
        R,                      // R
        rightarrow,             // rightarrow
        S,                      // S
        sigma,                  // sigma
        sin,                    // sin
        sqrt,                   // sqrt
        sum,                    // sum
        T,                      // T
        tan,                    // tan
        theta,                  // theta
        times,                  // times
        u,                      // u
        v,                      // v
        w,                      // w
        X,                      // X
        y,                      // y
        z,                      // z
        none
    }
}
